//link: https://leetcode.com/problems/daily-temperatures/

Given a list of daily temperatures T, return a list such that, for each day in the input, tells you how many days you would have to wait until a warmer temperature. If there is no future day for which this is possible, put 0 instead.

For example, given the list of temperatures T = [73, 74, 75, 71, 69, 72, 76, 73], your output should be [1, 1, 4, 2, 1, 1, 0, 0].

Note: The length of temperatures will be in the range [1, 30000]. Each temperature will be an integer in the range [30, 100].

//my cpp solution after learning
//using monotonic stack

class Solution {
public:
    vector<int> dailyTemperatures(vector<int>& t) {
        stack<pair<int,int>> st;
        int sz = t.size();
        vector<int> ans(sz,0);
        
        for(int i=0;i<sz;i++){
            while(!st.empty() && st.top().first<t[i]){
                int ind = st.top().second;
                ans[ind] = i-ind;
                st.pop();
            }
            st.push(make_pair(t[i],i));
        }
        
        while(!st.empty()){
            int ind = st.top().second;
            ans[ind] = 0;
            st.pop();
        }
        
        return ans;
    } 
};
