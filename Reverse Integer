Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.

Assume the environment does not allow you to store 64-bit integers (signed or unsigned).

 

Example 1:

Input: x = 123
Output: 321
Example 2:

Input: x = -123
Output: -321
Example 3:

Input: x = 120
Output: 21
 

Constraints:

-231 <= x <= 231 - 1

//cpp

class Solution {
public:
    int reverse(int x) {
        int num = abs(x);
        int reverse_x = 0;
        bool isNeg = x<0;

        while(num){
            int rem = num%10;
            num = num/10;
            if((long)reverse_x*10+rem > INT_MAX) return 0;
            reverse_x = reverse_x*10+rem;
        }

        if(isNeg) {
            if(long(-reverse_x) < INT_MIN)  return 0;
            reverse_x = -reverse_x;
        };

        return reverse_x;
    }
};
